<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>preventDefault vs. intercept</title>
  </head>
  <body>
    <form action="/search">
      <input type="text" name="search" placeholder="GET search" />
      <button type="submit">Search</button>
    </form>
    <form method="POST" action="/search">
      <input type="text" name="search" placeholder="POST search" />
      <button type="submit">Search</button>
    </form>
    <button id="mode-button"> Current mode: preventDefault</button>
    <button id="redirect">Redirect Off</button>
    <p id="url"></p>
    <a href="https://www.google.com">Google</a>
    <a href="/internal">Internal</a>
    <h3 id="mainText">
      The URL doesn't change when using event.preventDefault(). However, you
      cannot leave the page because we are not doing any checks on our listener.
    </h3>
  </body>
</html>

<script>
  const button = document.querySelector("#mode-button")
  const urlDisplay = document.querySelector("#url")
  const mainText = document.querySelector("#mainText")
  const redirect = document.querySelector("#redirect")

  if (!urlDisplay) throw new Error("No url display")

  urlDisplay.textContent = "current URL: " + location.href

  let mode = "preventDefault"
  let redirectMode = "off"

  redirect?.addEventListener("click", () => {
    if (redirectMode === "off") {
      redirectMode = "on"
      redirect.textContent = "Redirect On"
      if (
        button?.textContent === "Current mode: neither (redirect off)" &&
        mainText
      ) {
        button.textContent = "Current mode: intercept (redirect on)"
        mainText.innerHTML = `<h6>Ahh, that's better.</h6>`
      }
    } else {
      redirectMode = "off"
      redirect.textContent = "Redirect Off"
      if (
        button?.textContent === "Current mode: intercept (redirect on)" &&
        mainText
      ) {
        button.textContent = "Current mode: neither (redirect off)"
        mainText.innerHTML = `<h6>This ain't quite right...</h6>`
      }
    }
  })

  button?.addEventListener("click", modeSwap)

  window.navigation.addEventListener("navigate", navigationHandler)

  function modeSwap() {
    if (!button || !mainText) return console.log("no button or mainText")
    if (mode === "preventDefault") {
      mode = "intercept"
      if (redirectMode === "off") {
        button.textContent = "Current mode: neither (redirect off)"
        mainText.innerHTML = `<h6>This ain't quite right...</h6>`
      } else {
        button.textContent = "Current mode: intercept"
        mainText.innerHTML = `<h6>Okay, you can leave if you want to. But, I'll miss you.</h6>`
      }
    } else {
      mode = "preventDefault"
      button.textContent = "Current mode: preventDefault"
      mainText.innerHTML = `<h1>I'll never let you leave!</h1>`
    }
  }

  async function navigationHandler(event: any) {
    if (!button || !urlDisplay || !mainText) return

    const url = new URL(event.destination.url)

    const path = url.pathname
    const searchParams = url.searchParams

    if (mode === "preventDefault") {
      event.preventDefault()
      const formData = event.formData
      if (path === "/search" && searchParams.has("search")) {
        const search = searchParams.get("search")
        mainText.textContent = `You searched for ${search} with a GET request. That's so cool.`
        return
      }
      if (formData) {
        const search = formData.get("search")
        mainText.textContent = `You searched for ${search} with a POST request. I love that about you.`
        return
      }
      if (url.origin === location.origin) {
        mainText.innerHTML = `<h1>Yeah, just stay here. It's nice here.</h1>`
        return
      } else {
        mainText.innerHTML = `<h1>NO! You can't go to ${url.href}.</h1>
        <small>I would miss you too much.</small>`
      }
    } else {
      console.log("intercepting")
      if (redirectMode === "off") {
        return
      }
      console.log("handling")
      event.intercept({
        async handler() {
          console.log(event)
          if (path === "/internal") {
            mainText.innerHTML = `<h1>Yeah, you can stay here... But, really... you can leave now.</h1>`
          }
          if (path === "/search" && searchParams.has("search")) {
            const search = searchParams.get("search")
            mainText.textContent = `You searched for ${search} with a GET request. How original.`
          }
          const formData = event.formData
          const search = formData.get("search")
          fetch("/search", {
            method: "POST",
            body: JSON.stringify({ search }),
          })
          mainText.textContent = `You searched for ${search} with a POST request to /search. Boooring. Just go to Google already.`
          await window.navigation.navigate("/differentURL", {
            history: "replace",
          }).finished
        },
      })
    }
    setTimeout(() => {
      urlDisplay.textContent = "current URL: " + location.href
    })
  }
</script>
